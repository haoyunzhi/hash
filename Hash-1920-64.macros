/*
Code automatically generated by KeccakTools!

The Keccak sponge function, designed by Guido Bertoni, Joan Daemen,
MichaÃ«l Peeters and Gilles Van Assche. For more information, feedback or
questions, please refer to our website: http://keccak.noekeon.org/

Implementation by the designers,
hereby denoted as "the implementer".

To the extent possible under law, the implementer has waived all copyright
and related or neighboring rights to the source code in this file.
http://creativecommons.org/publicdomain/zero/1.0/
*/

const int Rc[60] = {
        0x1234,0x62fb,0xf6de,0xda4d,0x4b78,0x814f,0x8e82,0xd081,0x1a7c,0x8c63,0xc5e6,0xe575,0x8340,0x9837,0x010a,0x0d29,0x49c4,0x78cb,0x63ee,0xfb9d,0xf208,0xc21f,0xd292,0x24d1,0xc00c,0xc833,0xf0f6,0xbcc5,0xb7d0,0x9f07,0x231a,0xb779,0x9d54,0x1a9b,0x8cfe,0xc8ed,0xf498,0xceef,0x12a2,0x6521,0x019c,0x1003,0x5806,0xc015,0xc860,0xf1d7,0xc12a,0xcdc9,0x0ce4,0x486b,0x720e,0x423d,0x5328,0xa7bf,0x4eb2,0x9171,0xdf2c,0x63d3,0xfb16,0xef65 };

#define declareABC \
    UINT64 A0, A1, A2, A3, A4; \
    UINT64 A5, A6, A7, A8, A9; \
    UINT64 A10, A11, A12, A13, A14; \
    UINT64 A15, A16, A17, A18, A19; \
    UINT64 A20, A21, A22, A23, A24; \
    UINT64 A25, A26, A27, A28, A29; \
    UINT64 B0, B1, B2, B3, B4; \
    UINT64 B5, B6, B7, B8, B9; \
    UINT64 B10, B11, B12, B13, B14; \
    UINT64 B15, B16, B17, B18, B19; \
    UINT64 B20, B21, B22, B23, B24; \
    UINT64 B25, B26, B27, B28, B29; \
    UINT64 C0, C1, C2, C3, C4; \
    UINT64 C5, C6, C7, C8, C9; \
    UINT64 C10, C11, C12, C13, C14; \
    UINT64 C15, C16, C17, C18, C19; \
    UINT64 C20, C21, C22, C23, C24; \
    UINT64 C25, C26, C27, C28, C29; \

#define round (A,ir)\
    C0=A0;\
    C1=A1;\
    C2=A2;\
    C3=A3;\
    C4=A4;\
    C5=A5;\
    C6=A6;\
    C7=A7;\
    C8=A8;\
    C9=A9;\
    C10=A10;\
    C11=A11;\
    C12=A12;\
    C13=A13;\
    C14=A14;\
    C15=A15;\
    C16=A16;\
    C17=A17;\
    C18=A18;\
    C19=A19;\
    C20=A20;\
    C21=A21;\
    C22=A22;\
    C23=A23;\
    C24=A24;\
    C25=A25;\
    C26=A26;\
    C27=A27;\
    C28=A28;\
    C29=A29;\
    A1^=ROTL64(C7,23);\
    A1^=ROTL64(C23,31);\
    A2^=ROTL64(C8,46);\
    A2^=ROTL64(C24,62);\
    A3^=ROTL64(C9,5);\
    A3^=ROTL64(C20,29);\
    A4^=ROTL64(C5,28);\
    A4^=ROTL64(C21,60);\
    A5^=ROTL64(C11,17);\
    A5^=ROTL64(C27,29);\
    A6^=ROTL64(C12,40);\
    A6^=ROTL64(C28,60);\
    A7^=ROTL64(C13,63);\
    A7^=ROTL64(C29,27);\
    A8^=ROTL64(C14,22);\
    A8^=ROTL64(C25,58);\
    A9^=ROTL64(C10,45);\
    A9^=ROTL64(C26,25);\
    A10^=ROTL64(C16,34);\
    A10^=ROTL64(C2,58);\
    A11^=ROTL64(C17,57);\
    A11^=ROTL64(C3,25);\
    A12^=ROTL64(C18,16);\
    A12^=ROTL64(C4,56);\
    A13^=ROTL64(C19,39);\
    A13^=ROTL64(C0,23);\
    A14^=ROTL64(C15,62);\
    A14^=ROTL64(C1,54);\
    A15^=ROTL64(C21,51);\
    A15^=ROTL64(C7,23);\
    A16^=ROTL64(C22,10);\
    A16^=ROTL64(C8,54);\
    A17^=ROTL64(C23,33);\
    A17^=ROTL64(C9,21);\
    A18^=ROTL64(C24,56);\
    A18^=ROTL64(C5,52);\
    A19^=ROTL64(C20,15);\
    A19^=ROTL64(C6,19);\
    A20^=ROTL64(C26,4);\
    A20^=ROTL64(C12,52);\
    A21^=ROTL64(C27,27);\
    A21^=ROTL64(C13,19);\
    A22^=ROTL64(C28,50);\
    A22^=ROTL64(C14,50);\
    A23^=ROTL64(C29,9);\
    A23^=ROTL64(C10,17);\
    A24^=ROTL64(C25,32);\
    A24^=ROTL64(C11,48);\
    A25^=ROTL64(C1,21);\
    A25^=ROTL64(C17,17);\
    A26^=ROTL64(C2,44);\
    A26^=ROTL64(C18,48);\
    A27^=ROTL64(C3,3);\
    A27^=ROTL64(C19,15);\
    A28^=ROTL64(C4,26);\
    A28^=ROTL64(C15,46);\
    A29^=ROTL64(C0,49);\
    A29^=ROTL64(C16,13);\
    A0^=C29;\
    A4^=Rc[ir*5+0];\
    A8^=Rc[ir*5+1];\
    A12^=Rc[ir*5+2];\
    A16^=Rc[ir*5+3];\
    A20^=Rc[ir*5+4];\
    B0=A0^(A1&(A2^A3));\
    B5=A5^(A6&(A7^A8));\
    B10=A10^(A11&(A12^A13));\
    B15=A15^(A16&(A17^A18));\
    B20=A20^(A21&(A22^A23));\
    B25=A25^(A26&(A27^A28));\
    B1=A1^(A2&(A3^A4));\
    B6=A6^(A7&(A8^A9));\
    B11=A11^(A12&(A13^A14));\
    B16=A16^(A17&(A18^A19));\
    B21=A21^(A22&(A23^A24));\
    B26=A26^(A27&(A28^A29));\
    B2=A2^(A3&(A4^A0));\
    B7=A7^(A8&(A9^A5));\
    B12=A12^(A13&(A14^A10));\
    B17=A17^(A18&(A19^A15));\
    B22=A22^(A23&(A24^A20));\
    B27=A27^(A28&(A29^A25));\
    B3=A3^(A4&(A0^A1));\
    B8=A8^(A9&(A5^A6));\
    B13=A13^(A14&(A10^A11));\
    B18=A18^(A19&(A15^A16));\
    B23=A23^(A24&(A20^A21));\
    B28=A28^(A29&(A25^A26));\
    B4=A4^(A0&(A1^A2));\
    B9=A9^(A5&(A6^A7));\
    B14=A14^(A10&(A11^A12));\
    B19=A19^(A15&(A16^A17));\
    B24=A24^(A20&(A21^A22));\
    B29=A29^(A25&(A26^A27));\
    B0=ROTL64(B0,0)^ROTL64(B0,7)^ROTL64(B0,13)^ROTL64(B0,37)^ROTL64(B0,43);\
    B1=ROTL64(B1,2)^ROTL64(B1,9)^ROTL64(B1,15)^ROTL64(B1,39)^ROTL64(B1,45);\
    B2=ROTL64(B2,4)^ROTL64(B2,11)^ROTL64(B2,17)^ROTL64(B2,41)^ROTL64(B2,47);\
    B3=ROTL64(B3,6)^ROTL64(B3,13)^ROTL64(B3,19)^ROTL64(B3,43)^ROTL64(B3,49);\
    B4=ROTL64(B4,8)^ROTL64(B4,15)^ROTL64(B4,21)^ROTL64(B4,45)^ROTL64(B4,51);\
    B5=ROTL64(B5,10)^ROTL64(B5,17)^ROTL64(B5,23)^ROTL64(B5,47)^ROTL64(B5,53);\
    B6=ROTL64(B6,12)^ROTL64(B6,19)^ROTL64(B6,25)^ROTL64(B6,49)^ROTL64(B6,55);\
    B7=ROTL64(B7,14)^ROTL64(B7,21)^ROTL64(B7,27)^ROTL64(B7,51)^ROTL64(B7,57);\
    B8=ROTL64(B8,16)^ROTL64(B8,23)^ROTL64(B8,29)^ROTL64(B8,53)^ROTL64(B8,59);\
    B9=ROTL64(B9,18)^ROTL64(B9,25)^ROTL64(B9,31)^ROTL64(B9,55)^ROTL64(B9,61);\
    B10=ROTL64(B10,20)^ROTL64(B10,27)^ROTL64(B10,33)^ROTL64(B10,57)^ROTL64(B10,63);\
    B11=ROTL64(B11,22)^ROTL64(B11,29)^ROTL64(B11,35)^ROTL64(B11,59)^ROTL64(B11,1);\
    B12=ROTL64(B12,24)^ROTL64(B12,31)^ROTL64(B12,37)^ROTL64(B12,61)^ROTL64(B12,3);\
    B13=ROTL64(B13,26)^ROTL64(B13,33)^ROTL64(B13,39)^ROTL64(B13,63)^ROTL64(B13,5);\
    B14=ROTL64(B14,28)^ROTL64(B14,35)^ROTL64(B14,41)^ROTL64(B14,1)^ROTL64(B14,7);\
    B15=ROTL64(B15,30)^ROTL64(B15,37)^ROTL64(B15,43)^ROTL64(B15,3)^ROTL64(B15,9);\
    B16=ROTL64(B16,32)^ROTL64(B16,39)^ROTL64(B16,45)^ROTL64(B16,5)^ROTL64(B16,11);\
    B17=ROTL64(B17,34)^ROTL64(B17,41)^ROTL64(B17,47)^ROTL64(B17,7)^ROTL64(B17,13);\
    B18=ROTL64(B18,36)^ROTL64(B18,43)^ROTL64(B18,49)^ROTL64(B18,9)^ROTL64(B18,15);\
    B19=ROTL64(B19,38)^ROTL64(B19,45)^ROTL64(B19,51)^ROTL64(B19,11)^ROTL64(B19,17);\
    B20=ROTL64(B20,40)^ROTL64(B20,47)^ROTL64(B20,53)^ROTL64(B20,13)^ROTL64(B20,19);\
    B21=ROTL64(B21,42)^ROTL64(B21,49)^ROTL64(B21,55)^ROTL64(B21,15)^ROTL64(B21,21);\
    B22=ROTL64(B22,44)^ROTL64(B22,51)^ROTL64(B22,57)^ROTL64(B22,17)^ROTL64(B22,23);\
    B23=ROTL64(B23,46)^ROTL64(B23,53)^ROTL64(B23,59)^ROTL64(B23,19)^ROTL64(B23,25);\
    B24=ROTL64(B24,48)^ROTL64(B24,55)^ROTL64(B24,61)^ROTL64(B24,21)^ROTL64(B24,27);\
    B25=ROTL64(B25,50)^ROTL64(B25,57)^ROTL64(B25,63)^ROTL64(B25,23)^ROTL64(B25,29);\
    B26=ROTL64(B26,52)^ROTL64(B26,59)^ROTL64(B26,1)^ROTL64(B26,25)^ROTL64(B26,31);\
    B27=ROTL64(B27,54)^ROTL64(B27,61)^ROTL64(B27,3)^ROTL64(B27,27)^ROTL64(B27,33);\
    B28=ROTL64(B28,56)^ROTL64(B28,63)^ROTL64(B28,5)^ROTL64(B28,29)^ROTL64(B28,35);\
    B29=ROTL64(B29,58)^ROTL64(B29,1)^ROTL64(B29,7)^ROTL64(B29,31)^ROTL64(B29,37);\
    A0=B0^B5&B10^B10&B20&B25;\
    A5=B5^B10&B15^B15&B25&B0;\
    A10=B10^B15&B20^B20&B0&B5;\
    A15=B15^B20&B25^B25&B5&B10;\
    A20=B20^B25&B0^B0&B10&B15;\
    A25=B25^B0&B5^B5&B15&B20;\
    A1=B1^B6&B11^B11&B21&B26;\
    A6=B6^B11&B16^B16&B26&B1;\
    A11=B11^B16&B21^B21&B1&B6;\
    A16=B16^B21&B26^B26&B6&B11;\
    A21=B21^B26&B1^B1&B11&B16;\
    A26=B26^B1&B6^B6&B16&B21;\
    A2=B2^B7&B12^B12&B22&B27;\
    A7=B7^B12&B17^B17&B27&B2;\
    A12=B12^B17&B22^B22&B2&B7;\
    A17=B17^B22&B27^B27&B7&B12;\
    A22=B22^B27&B2^B2&B12&B17;\
    A27=B27^B2&B7^B7&B17&B22;\
    A3=B3^B8&B13^B13&B23&B28;\
    A8=B8^B13&B18^B18&B28&B3;\
    A13=B13^B18&B23^B23&B3&B8;\
    A18=B18^B23&B28^B28&B8&B13;\
    A23=B23^B28&B3^B3&B13&B18;\
    A28=B28^B3&B8^B8&B18&B23;\
    A4=B4^B9&B14^B14&B24&B29;\
    A9=B9^B14&B19^B19&B29&B4;\
    A14=B14^B19&B24^B24&B4&B9;\
    A19=B19^B24&B29^B29&B9&B14;\
    A24=B24^B29&B4^B4&B14&B19;\
    A29=B29^B4&B9^B9&B19&B24;\



#define copyFromStateAndXor896bits(X, state, input) \
    X##ba = state[ 0]^input[ 0]; \
    X##be = state[ 1]^input[ 1]; \
    X##bi = state[ 2]^input[ 2]; \
    X##bo = state[ 3]^input[ 3]; \
    X##bu = state[ 4]^input[ 4]; \
    X##ga = state[ 5]^input[ 5]; \
    X##ge = state[ 6]^input[ 6]; \
    X##gi = state[ 7]^input[ 7]; \
    X##go = state[ 8]^input[ 8]; \
    X##gu = state[ 9]^input[ 9]; \
    X##ka = state[10]^input[ 10]; \
    X##ke = state[11]^input[ 11]; \
    X##ki = state[12]^input[ 12]; \
    X##ko = state[13]^input[ 13]; \
    X##ku = state[14]; \
    X##ma = state[15]; \
    X##me = state[16]; \
    X##mi = state[17]; \
    X##mo = state[18]; \
    X##mu = state[19]; \
    X##sa = state[20]; \
    X##se = state[21]; \
    X##si = state[22]; \
    X##so = state[23]; \
    X##su = state[24]; \
    X##su = state[25]; \
    X##su = state[26]; \
    X##su = state[27]; \
    X##su = state[28]; \
    X##su = state[29]; \

#define copyFromStateAndXor1152bits(X, state, input) \
    X##ba = state[ 0]^input[ 0]; \
    X##be = state[ 1]^input[ 1]; \
    X##bi = state[ 2]^input[ 2]; \
    X##bo = state[ 3]^input[ 3]; \
    X##bu = state[ 4]^input[ 4]; \
    X##ga = state[ 5]^input[ 5]; \
    X##ge = state[ 6]^input[ 6]; \
    X##gi = state[ 7]^input[ 7]; \
    X##go = state[ 8]^input[ 8]; \
    X##gu = state[ 9]^input[ 9]; \
    X##ka = state[10]^input[10]; \
    X##ke = state[11]^input[11]; \
    X##ki = state[12]^input[12]; \
    X##ko = state[13]^input[13]; \
    X##ku = state[14]^input[14]; \
    X##ma = state[15]^input[15]; \
    X##me = state[16]^input[16]; \
    X##mi = state[17]^input[17]; \
    X##mo = state[18]; \
    X##mu = state[19]; \
    X##sa = state[20]; \
    X##se = state[21]; \
    X##si = state[22]; \
    X##so = state[23]; \
    X##su = state[24]; \
    X##su = state[25]; \
    X##su = state[26]; \
    X##su = state[27]; \
    X##su = state[28]; \
    X##su = state[29]; \

#define copyFromStateAndXor1024bits(X, state, input) \
    X##ba = state[ 0]^input[ 0]; \
    X##be = state[ 1]^input[ 1]; \
    X##bi = state[ 2]^input[ 2]; \
    X##bo = state[ 3]^input[ 3]; \
    X##bu = state[ 4]^input[ 4]; \
    X##ga = state[ 5]^input[ 5]; \
    X##ge = state[ 6]^input[ 6]; \
    X##gi = state[ 7]^input[ 7]; \
    X##go = state[ 8]^input[ 8]; \
    X##gu = state[ 9]^input[ 9]; \
    X##ka = state[10]^input[10]; \
    X##ke = state[11]^input[11]; \
    X##ki = state[12]^input[12]; \
    X##ko = state[13]^input[13]; \
    X##ku = state[14]^input[14]; \
    X##ma = state[15]^input[15]; \
    X##me = state[16]^input[16]; \
    X##mi = state[17]^input[17]; \
    X##mo = state[18]^input[18]; \
    X##mu = state[19]^input[19]; \
    X##sa = state[20]^input[20]; \
    X##se = state[21]; \
    X##si = state[22]; \
    X##so = state[23]; \
    X##su = state[24]; \
    X##su = state[25]; \
    X##su = state[26]; \
    X##su = state[27]; \
    X##su = state[28]; \
    X##su = state[29]; \

#define copyFromStateAndXor1408bits(X, state, input) \
    X##ba = state[ 0]^input[ 0]; \
    X##be = state[ 1]^input[ 1]; \
    X##bi = state[ 2]^input[ 2]; \
    X##bo = state[ 3]^input[ 3]; \
    X##bu = state[ 4]^input[ 4]; \
    X##ga = state[ 5]^input[ 5]; \
    X##ge = state[ 6]^input[ 6]; \
    X##gi = state[ 7]^input[ 7]; \
    X##go = state[ 8]^input[ 8]; \
    X##gu = state[ 9]^input[ 9]; \
    X##ka = state[10]^input[10]; \
    X##ke = state[11]^input[11]; \
    X##ki = state[12]^input[12]; \
    X##ko = state[13]^input[13]; \
    X##ku = state[14]^input[14]; \
    X##ma = state[15]^input[15]; \
    X##me = state[16]^input[16]; \
    X##mi = state[17]^input[17]; \
    X##mo = state[18]^input[18]; \
    X##mu = state[19]^input[19]; \
    X##sa = state[20]^input[20]; \
    X##se = state[21]^input[21]; \
    X##si = state[22]; \
    X##so = state[23]; \
    X##su = state[24]; \
    X##su = state[25]; \
    X##su = state[26]; \
    X##su = state[27]; \
    X##su = state[28]; \
    X##su = state[29]; \


#define copyFromState(X, state) \
    X##ba = state[ 0]; \
    X##be = state[ 1]; \
    X##bi = state[ 2]; \
    X##bo = state[ 3]; \
    X##bu = state[ 4]; \
    X##ga = state[ 5]; \
    X##ge = state[ 6]; \
    X##gi = state[ 7]; \
    X##go = state[ 8]; \
    X##gu = state[ 9]; \
    X##ka = state[10]; \
    X##ke = state[11]; \
    X##ki = state[12]; \
    X##ko = state[13]; \
    X##ku = state[14]; \
    X##ma = state[15]; \
    X##me = state[16]; \
    X##mi = state[17]; \
    X##mo = state[18]; \
    X##mu = state[19]; \
    X##sa = state[20]; \
    X##se = state[21]; \
    X##si = state[22]; \
    X##so = state[23]; \
    X##su = state[24]; \
    X##wa = state[25]; \
    X##we = state[26]; \
    X##wi = state[27]; \
    X##wo = state[28]; \
    X##wu = state[29];          \

#define copyToState(state, X) \
    state[ 0] = X##ba; \
    state[ 1] = X##be; \
    state[ 2] = X##bi; \
    state[ 3] = X##bo; \
    state[ 4] = X##bu; \
    state[ 5] = X##ga; \
    state[ 6] = X##ge; \
    state[ 7] = X##gi; \
    state[ 8] = X##go; \
    state[ 9] = X##gu; \
    state[10] = X##ka; \
    state[11] = X##ke; \
    state[12] = X##ki; \
    state[13] = X##ko; \
    state[14] = X##ku; \
    state[15] = X##ma; \
    state[16] = X##me; \
    state[17] = X##mi; \
    state[18] = X##mo; \
    state[19] = X##mu; \
    state[20] = X##sa; \
    state[21] = X##se; \
    state[22] = X##si; \
    state[23] = X##so; \
    state[24] = X##su; \
    state[25] = X##wa; \
    state[26] = X##we; \
    state[27] = X##wi; \
    state[28] = X##wo; \
    state[29] = X##wu;          \

#define copyStateVariables(X, Y) \
    X##ba = Y##ba; \
    X##be = Y##be; \
    X##bi = Y##bi; \
    X##bo = Y##bo; \
    X##bu = Y##bu; \
    X##ga = Y##ga; \
    X##ge = Y##ge; \
    X##gi = Y##gi; \
    X##go = Y##go; \
    X##gu = Y##gu; \
    X##ka = Y##ka; \
    X##ke = Y##ke; \
    X##ki = Y##ki; \
    X##ko = Y##ko; \
    X##ku = Y##ku; \
    X##ma = Y##ma; \
    X##me = Y##me; \
    X##mi = Y##mi; \
    X##mo = Y##mo; \
    X##mu = Y##mu; \
    X##sa = Y##sa; \
    X##se = Y##se; \
    X##si = Y##si; \
    X##so = Y##so; \
    X##su = Y##su; \
    X##wa = Y##wa; \
    X##we = Y##we; \
    X##wi = Y##wi; \
    X##wo = Y##wo; \
    X##wu = Y##wu; \
